# Version constraints for pip-installation.
#
# This file doesn't install any packages. It specifies version constraints
# that will be applied if a package is needed.
#
# When pinning something here, please provide an explanation of why.  Ideally,
# link to other information that will help people in the future to remove the
# pin when possible.  Writing an issue against the offending project and
# linking to it here is good.


# This file contains all common constraints for edx-repos
-c common_constraints.txt

# As it is not clarified what exact breaking changes will be introduced as per
# the next major release, ensure the installed version is within boundaries.
celery>=5.2.2,<6.0.0


# required for celery>=5.2.0;<5.3.0
click>=8.0,<9.0

# each version upgrade need release notes review.
django-storages==1.14

# The team that owns this package will manually bump this package rather than having it pulled in automatically.
# This is to allow them to better control its deployment and to do it in a process that works better
# for them.
edx-enterprise==4.6.0

# django-oauth-toolkit version >=2.0.0 has breaking changes. More details
# mentioned on this issue https://github.com/openedx/edx-platform/issues/32884
django-oauth-toolkit==1.7.1


# constrained in opaque_keys. migration guide here: https://pymongo.readthedocs.io/en/4.0/migrate-to-pymongo4.html
# Major upgrade will be done in separate ticket.
pymongo<4.0.0

# greater version has breaking changes and requires some migration steps.
django-webpack-loader==0.7.0

# At the time of writing this comment, we do not know whether py2neo>=2022
# will support our currently-deployed Neo4j version (3.5).
# Feel free to loosen this constraint if/when it is confirmed that a later
# version of py2neo will work with Neo4j 3.5.
py2neo<2022

# scipy version 1.8 requires numpy>=1.17.3, we've pinned numpy to <1.17.0 in requirements/edx-sandbox/py38.in
scipy<1.8.0

# edx-enterprise, snowflake-connector-python require charset-normalizer==2.0.0
# Can be removed once snowflake-connector-python>2.7.9 is released with the fix.
charset-normalizer<2.1.0

# markdown>=3.4.0 has failures due to internal refactorings which causes the tests to fail
# pinning the version untill the issue gets resolved in the package itself
markdown<3.4.0

# pycodestyle==2.9.0 generates false positive error E275.
# Constraint can be removed once the issue https://github.com/PyCQA/pycodestyle/issues/1090 is fixed.
pycodestyle<2.9.0

# pyopenssl>22.0.0 requires cryptography>=38.0 && conflicts with snowflak-connector-python requires cryptography<37
# which causes the requirements upgrade job to fail due to constraint conflict
# This constraint can be removed once https://github.com/snowflakedb/snowflake-connector-python/issues/1259 is resolved
# and snowflake-connector-python>2.8.0 is released.
pyopenssl==22.0.0

cryptography==38.0.4 # greater version has some issues with openssl.

pylint<2.16.0 # greater version failing quality test. Fix them in seperate ticket.


# Deprecated version of the AWS SDK;
# we should stop using this
boto==2.39.0


# adding these constraints to minimize boto3 and botocore changeset
social-auth-core==4.3.0
babel==2.11.0
social-auth-app-django==5.0.0
algoliasearch==2.6.3

# pytz>2022 has major changes which are causing test failures.
# Pinning this version for now so this could be fixed in a separate PR later on
# Issue for unpinning: https://github.com/openedx/edx-platform/issues/32093
pytz<2023

# urllib3>=2.0.0 conflicts with elastic search && snowflake-connector-python packages
# which require urllib3<2 for now.
# Issue for unpinning: https://github.com/openedx/edx-platform/issues/32222
urllib3<2.0.0

# Sphinx==5.3.0 requires docutils<0.20
# Issue to unpin Sphinx to resolve this constraint: https://github.com/openedx/edx-lint/issues/338
docutils<0.20

# greater version has dropped few dependencies. Fix this in other ticket.
drf-yasg<1.21.6

# Adding pin to avoid any major upgrade
djangorestframework<3.15.0

# tests failing with greater version. Fix this in separate ticket.
pillow<10.0.0

# The version of django-stubs we can use depends on which Django release we're using
# 1.16.0 works with Django 3.2 through 4.1
django-stubs==1.16.0
djangorestframework-stubs==3.14.0  # Pinned to match django-stubs. Remove this when we can remove the above pin.

# Our legacy Sass code is incompatible with anything except this ancient libsass version.
# Here is a ticket to upgrade, but it's of debatable importance given that we are rapidly moving
# away from legacy LMS/CMS frontends:
# https://github.com/openedx/edx-platform/issues/31616
libsass==0.10.0

# incremental upgrade
django-simple-history==3.4.0

# greater version breaking upgrade builds
click==8.1.6

# pinning this version to avoid updates while the library is being developed
openedx-learning==0.2.3

# lti-consumer-xblock 9.6.2 contains a breaking change that makes
# existing custom parameter configurations unusable.
# https://github.com/openedx/xblock-lti-consumer/issues/410 has been opened to track a fix
lti-consumer-xblock==9.6.1
